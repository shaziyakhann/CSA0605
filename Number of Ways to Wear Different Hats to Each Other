def numberOfWays(hats):
    MOD = 10**9 + 7
    n = len(hats)
    
    # Create a list to store which people can wear which hats
    hat_to_people = [[] for _ in range(41)]
    
    for person in range(n):
        for hat in hats[person]:
            hat_to_people[hat].append(person)
    
    # Memoization dictionary
    memo = {}
    
    def dp(person_index, mask):
        if person_index == n:  # All people have been assigned hats
            return 1
        if (person_index, mask) in memo:
            return memo[(person_index, mask)]
        
        total_ways = 0
        # Try to assign hats from 1 to 40
        for hat in range(1, 41):
            if hat in hat_to_people:  # Check if this hat is available
                for p in hat_to_people[hat]:
                    if (mask & (1 << p)) == 0:  # If person p has not been assigned a hat
                        total_ways += dp(person_index + 1, mask | (1 << p))
                        total_ways %= MOD
        
        memo[(person_index, mask)] = total_ways
        return total_ways
    
    return dp(0, 0)

# Example usage
hats1 = [[3, 4], [4, 5], [5]]
print(numberOfWays(hats1))  # Output: 1

hats2 = [[3, 5, 1], [3, 5]]
print(numberOfWays(hats2))
