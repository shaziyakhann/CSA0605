def uniquePaths(m, n):
    # Create a 2D array initialized with zeros
    dp = [[0] * n for _ in range(m)]
    
    # Base case: only one way to reach any cell in the first row/column
    for i in range(m):
        dp[i][0] = 1
    for j in range(n):
        dp[0][j] = 1
    
    # Fill the dp array using the recurrence relation
    for i in range(1, m):
        for j in range(1, n):
            dp[i][j] = dp[i-1][j] + dp[i][j-1]
    
    return dp[m-1][n-1]

# Example usage:
print(uniquePaths(3, 7))  # Output: 28
print(uniquePaths(3, 2))  # Output: 3
