def is_hamiltonian_cycle(edges, n):
    from itertools import permutations

    # Create an adjacency matrix
    graph = [[0] * n for _ in range(n)]
    for u, v in edges:
        graph[u][v] = 1
        graph[v][u] = 1

    # Check all permutations of vertices
    for perm in permutations(range(n)):
        valid_cycle = True
        # Check if the current permutation forms a cycle
        for i in range(n):
            if graph[perm[i]][perm[(i + 1) % n]] == 0:
                valid_cycle = False
                break
        if valid_cycle:
            return True

    return False

# Example usage:
edges = [(0, 1), (1, 2), (2,
