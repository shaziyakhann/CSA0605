def removeDuplicates(nums):
    if not nums:
        return 0  # Return 0 if the list is empty

    # Initialize the first pointer for unique elements
    i = 0

    # Iterate through the array starting from the second element
    for j in range(1, len(nums)):
        if nums[j] != nums[i]:  # Check if the current element is different
            i += 1  # Move the unique pointer forward
            nums[i] = nums[j]  # Update the unique position with the new element

    return i + 1  # Return the count of unique elements

# Example usage
nums1 = [1, 1, 2]
length1 = removeDuplicates(nums1)
print(length1)  # Output: 2
print(nums1[:length1])  # Output: [1, 2]

nums2 = [0, 0, 1, 1, 1, 2, 3, 3]
length2 = removeDuplicates(nums2)
print(length2)  # Output: 5
print(nums2[:length2])  # Output: [0, 1, 2, 3]
