def subset_sum_exists(arr, target):
    n = len(arr)
    mid = n // 2
    
    # Generate all possible sums for the first half
    sums1 = set()
    for mask in range(1 << mid):
        curr_sum = 0
        for i in range(mid):
            if mask & (1 << i):
                curr_sum += arr[i]
        sums1.add(curr_sum)
    
    # Check if the target sum exists in the second half
    for mask in range(1 << (n - mid)):
        curr_sum = 0
        for i in range(mid, n):
            if mask & (1 << (i - mid)):
                curr_sum += arr[i]
        
        if target - curr_sum in sums1:
            return True
    
    return False

# Example usage
print(subset_sum_exists([1, 3, 9, 2, 7, 12], 15))  # Output: True
print(subset_sum_exists([3, 34, 4, 12, 5, 2], 15))  # Output: False
